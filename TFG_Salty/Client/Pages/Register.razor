@page "/register2"
@inject IAuthService AuthService


<PageTitle>Registro</PageTitle>
<h3>Sign in</h3>
<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />

    <MudItem>
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Email" @bind-Value="user.Email" Variant="Variant.Filled"  HelperText="Introduce una dirección de correo válida"/>


                <MudTextField Label="Contraseña" @bind-Value="user.Password" Variant="Variant.Filled" HelperText="Entre 6 y 100 caracteres" />


                <MudTextField Label="Confirmar contraseña" @bind-Value="user.ConfirmPassword" Variant="Variant.Filled" />

            </MudCardContent>
            <MudCardActions>
                <MudButton Type="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Login</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <ValidationSummary />


    <div class="@messageCssClass">
        <span>@message</span>
    </div>
</EditForm>


@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.RegisterAsync(user);
        message = result.Message;
        if (result.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";
    }

}
