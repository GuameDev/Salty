@page "/orders/{orderId:int}"
@inject IOrderService OrderService

@if (order == null)
{
    <MudText>Cargando pedido...</MudText>
}
else
{
    <MudText Typo="Typo.h3">Fecha del pedido: @order.OrderDate</MudText>
    <div>
        @foreach (var product in order.Products)
        {


            <MudCard>
                <MudGrid Justify="Justify.Center">
                    
                </MudGrid>
            </MudCard>


            <div class="container">
                <div class="image-wrapper">
                    <img src="@product.ImageUrl" class="image" />
                </div>
                <div class="name">
                    <h5><a href="/product/@product.ProductId">@product.Title</a></h5>
                    <span>@product.ProductType</span>
                    <span>Quantity: @product.Quantity</span>
                </div>
                <div class="product-price">@product.TotalPrice€</div>
            </div>
        }
    </div>
        <div class="product-price">
            Total: @order.TotalPrice€
        </div>
    <div />
}

@code {

    [Parameter]
    public int OrderId { get; set; }

    OrderDetailsResponseDTO order = null;

    protected override async Task OnInitializedAsync()
    {
        order = await OrderService.GetOrderDetails(OrderId);
    }

}
